# SERVE PER GENERARE NUOVI PESI

model:
  base_learning_rate: 1.0e-05

  target: ldm.models.seginpaint.LatentInpaintSEGDiffusion.LatentInpaintDiffusionSEG_CHANNELS
  params:
    linear_start: 0.0015
    linear_end: 0.0205
    num_timesteps_cond: 1
    log_every_t: 100
    timesteps: 1000 # per overfittare tutti i livelli di rumore almeno 500 epoche
    loss_type: l1
    first_stage_key: image
    cond_stage_key: masked_image # 4 channels
    cond_stage_trainable: false 
    # do not use ema
    use_ema: false
    image_size: 64 # feature map size
    #image_size: 128 # feature map size for 512 ---> l'hanno lasciata a 64 perchè loro hanno addestrato su 256? però in inference questo non viene minimamente usato, solo nei logger
    channels: 3
    concat_mode: true # there will be no context_dim specified in unet,
    # check configs/stable-diffusion/v1-inference.yaml for cross-attention adn context dim
    monitor: val/loss
    #monitor: val/loss_simple_ema
    # scale_factor: 0.18215
    finetune_keys_to_retain: null
    finetune_training_keys: null 
    encode_seg_with_first_stage: false
    # ckpt_path: "models/ldm/SEG_INPAINT/model_SEG.ckpt"
    ckpt_path: "models/ldm/SEG_INPAINT/model_SEG_RGB.ckpt"



    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64 # unused
        in_channels: 10 # image, masked image, mask, seg-mask (novel weights)
        out_channels: 3 #FINAL IMAGE
        model_channels: 256
        attention_resolutions:
        - 8
        - 4
        - 2
        num_res_blocks: 2
        channel_mult:
        - 1
        - 2
        - 3
        - 4
        num_heads: 8
        resblock_updown: true
        use_checkpoint: True # gradient checkpointing
        # legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        embed_dim: 3
        n_embed: 8192
        monitor: val/rec_loss
        ddconfig:
          attn_type: none # concat mode
          double_z: false
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity # NO TRAIN FOR AUTOENCODER
    cond_stage_config: __is_first_stage__

data:
  target: ldm.data.data_adapter.DataModuleFromConfig
  params:
    batch_size: 32
    num_workers: 4
    wrap: false
    train:
      target: ldm.data.inpainting_dynafill_target_segmentation_REARRANGE.InpaintingDynaFillARRANGETargetSegmentationTrain
      params:
        csv_file: data/modules/DYNAFILL/full_to_target.csv
        data_root: /data01/lorenzo.stacchio/TU GRAZ/Stable_Diffusion_Inpaiting/Datasets/DynaFill/
        size: 256
    validation:
      target: ldm.data.inpainting_dynafill_target_segmentation_REARRANGE.InpaintingDynaFillARRANGETargetSegmentationValidation
      params:
        csv_file: data/modules/DYNAFILL/full_to_target.csv
        data_root: /data01/lorenzo.stacchio/TU GRAZ/Stable_Diffusion_Inpaiting/Datasets/DynaFill/
        size: 256


lightning:
  find_unused_parameters: True

  callbacks:
    image_logger:
      target: main_inpainting.ImageLogger
      params:
        disabled: False
        batch_frequency: 750
        max_images: 4
        increase_log_steps: True
        log_first_step: True
        log_images_kwargs:
          use_ema_scope: False
          plot_progressive_rows: True
          plot_diffusion_rows: True
          N: 4
          ddim_steps: 50  # default values reported by authors
          ddim_eta: 0.0   # default values reported by authors
  # trainer:
  #   benchmark: True
  #   val_check_interval: 5000000  # really sorry
  #   num_sanity_val_steps: 0
  #   accumulate_grad_batches: 2